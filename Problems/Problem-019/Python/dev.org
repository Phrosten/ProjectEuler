#+OPTIONS: toc:nil

* Counting Sundays

** Task

You are given the following information, but you may prefer to do some research
for yourself.

1 Jan 1900 was a Monday.
Thirty days has September,
April, June and November.
All the rest have thirty-one,
Saving February alone,
Which has twenty-eight, rain or shine.
And on leap years, twenty-nine.
A leap year occurs on any year evenly divisible by 4, but not on a century
unless it is divisible by 400.

How many Sundays fell on the first of the month during the twentieth century
(1 Jan 1901 to 31 Dec 2000)?

** Solution

#+BEGIN_SRC python :results output :exports both
def is_leap_year(year):
    if year % 4 == 0:
        if year % 100 == 0 and year % 400 != 0:
            return False
        return True
    return False

def get_month_length(year, month):
    return {
        1: 31,
        2: 29 if is_leap_year(year) else 28,
        3: 31,
        4: 30,
        5: 31,
        6: 30,
        7: 31,
        8: 31,
        9: 30,
        10: 31,
        11: 30,
        12: 31
    }[month]

# 01.01.1901 is a Tuesday
weekday = 1
year = 1901

total_sundays = 0
while year <= 2000:
    month = 1
    while month <= 12:
        if weekday == 6:
           total_sundays += 1
        weekday = (weekday + get_month_length(year, month) % 7) % 7
        month += 1
    year += 1

print(total_sundays)
#+END_SRC

#+RESULTS:
: 171
